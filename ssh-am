#!/usr/bin/env bash
# author: 耿贤坤 <gengxiankun@126.com>
# since: 2017-06-29
# set -x
defaultDrive='_amSsh'
defaultConfigPath=~/Documents/.ssh-am
defaultKeyConfigPath=${defaultConfigPath}/key
defaultConfigFile=${defaultConfigPath}/am.data

function _amHelp() {
  cat <<-EOF
usage: ssh-am [ account alias ]

Commands:
  add        add an account
  modify     modify an account
  delete     delete an account
  list 	     view account list
  find 	     view account details
  ansible    export account data in ansible format
  completion automatically replenish account name
  --scp      the default operation is ssh, and --scp is specified for scp operation.
  -h|--help  view help

Options:
  -n  account alias
  -i  IP
  -u  username
  -p  login password / google secondary authentication key
  -P  the port number
  -k  specify the key mode authorization by -t 'key'. This parameter passes the key address
  -t  ga、key
EOF
}

# initialization
if [[ ! -d ${defaultConfigPath} ]]; then
	mkdir -vp ${defaultConfigPath}
fi

if [[ ! -d ${defaultKeyConfigPath} ]]; then
	mkdir -vp ${defaultKeyConfigPath}
fi

if [[ ! -e ${defaultConfigFile} ]]; then
	touch ${defaultConfigFile}
	echo "#am.data" > ${defaultConfigFile}
fi

function _amList() {
	varList=$(cat ${defaultConfigFile} | grep "# \[" | cut -d'[' -f 2 | cut -d']' -f 1)
	echo -e "NAME USER IP PORT TYPE"
	for var in $varList
	do
		_getConfigVar $var false
    	echo -e "${var} ${!FREEZECOMBO_USER} ${!FREEZECOMBO_IP} ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_TYPE}"
	done
}

function _amAdd() {
	# getopts parameter analysis
	while getopts "n:u:i:p:P:t:k:" arg
	do
        case $arg in
	        n) amName="${OPTARG}" ;;
	        u) amUser="${OPTARG}" ;;
	        i) amIp="${OPTARG}" ;;
			P) amPort="${OPTARG}" ;;
			p) amCipher="${OPTARG}" ;;
			t) amType="${OPTARG:-password}" ;;
			k) amKey="${OPTARG}" ;;
	        ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
	done

	if [[ ${amType} == 'ga' ]]; then
		if [[ ! `which composer` ]]; then
			echo 'install composer...'
			curl -sSL https://getcomposer.org/installer | php
		fi
		if [[ ! `composer global show gengxiankun/phpga` ]]; then
			echo 'install phpga via composer...'
			composer global require gengxiankun/phpga:@dev
		fi
	fi

	if [[ ${amType} == 'key' ]]; then
		if [[ ! -e ${amKey} ]]; then
			echo "Invalid key path"; exit 0
		fi

		cp ${amKey} ${defaultKeyConfigPath}
		amKey=`echo ${defaultKeyConfigPath}/${amKey##*/}`
	fi
	echo "# [${amName}]" >> ${defaultConfigFile}
	echo "${amName}_user='${amUser}'" >> ${defaultConfigFile}
	echo "${amName}_ip='${amIp}'" >> ${defaultConfigFile}
	echo "${amName}_port='${amPort:-22}'" >> ${defaultConfigFile}
	echo "${amName}_cipher='${amCipher}'" >> ${defaultConfigFile}
	echo "${amName}_type='${amType}'" >> ${defaultConfigFile}
	echo "${amName}_key='${amKey}'" >> ${defaultConfigFile}
}

function _amModfiy() {
	# getopts parameter analysis
	while getopts "n:u:i:p:P:t:" arg
	do
        case $arg in
	        n) amName="${OPTARG}" ;;
	        u) amUser="${OPTARG}" ;;
	        i) amIp="${OPTARG}" ;;
			P) amPort="${OPTARG}" ;;
			p) amCipher="${OPTARG}" ;;
			t) amType="${OPTARG}" ;;
	        ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
	done

	_getConfigVar ${MODIFY_ALIAS} false
	if [[ -z ${!FREEZECOMBO_USER} ]]; then
		echo "Not specified alias."
		exit 2
	fi

	if [[ ! -z ${amName} ]]; then
		sed -i "" "s/\[$MODIFY_ALIAS\]/[$amName]/g" ${defaultConfigFile}
		sed -i "" "s/${FREEZECOMBO_USER}/${amName}_user/g" ${defaultConfigFile}
		sed -i "" "s/${FREEZECOMBO_IP}/${amName}_ip/g" ${defaultConfigFile}
		sed -i "" "s/${FREEZECOMBO_PORT}/${amName}_port/g" ${defaultConfigFile}
		sed -i "" "s/${FREEZECOMBO_CIPHER}/${amName}_cipher/g" ${defaultConfigFile}
		sed -i "" "s/${FREEZECOMBO_TYPE}/${amName}_type/g" ${defaultConfigFile}
	else
		amName=${MODIFY_ALIAS}
	fi

	if [[ ! -z ${amUser} ]]; then
		sed -i "" "s/^${amName}_user.*$/${amName}_user='${amUser}'/g" ${defaultConfigFile}
	fi

	if [[ ! -z ${amIp} ]]; then
		sed -i "" "s/^${amName}_ip.*$/${amName}_ip='${amIp}'/g" ${defaultConfigFile}
	fi

	if [[ ! -z ${amPort} ]]; then
		sed -i "" "s/^${amName}_port.*$/${amName}_port='${amPort}'/g" ${defaultConfigFile}
	fi

	if [[ ! -z ${amCipher} ]]; then
		sed -i "" "s/^${amName}_cipher.*$/${amName}_cipher='${amCipher}'/g" ${defaultConfigFile}
	fi

	if [[ ! -z ${amType} ]]; then
		sed -i "" "s/^${amName}_type.*$/${amName}_type='${amType}'/g" ${defaultConfigFile}
	fi
}

function _amFind() {
	_getConfigVar $1 false
	echo -e "# ${1} \n - user: ${!FREEZECOMBO_USER} \n - ip: ${!FREEZECOMBO_IP} \n - port: ${!FREEZECOMBO_PORT} \n - password/cipher: ${!FREEZECOMBO_CIPHER} \n - auth_type: ${!FREEZECOMBO_TYPE:-normal}"
}

function _amDelete() {
	if [[ -z ${1} ]]; then return 1; fi
	sed -i "" "/\[${1}\]/d" ${defaultConfigFile}
	sed -i "" "/^${1}_user/d" ${defaultConfigFile}
	sed -i "" "/^${1}_ip/d" ${defaultConfigFile}
	sed -i "" "/^${1}_port/d" ${defaultConfigFile}
	sed -i "" "/^${1}_cipher/d" ${defaultConfigFile}
	sed -i "" "/^${1}_type/d" ${defaultConfigFile}
	sed -i "" "/^${1}_key/d" ${defaultConfigFile}
}

function _getConfigVar() {
	source ${defaultConfigFile}
	FREEZECOMBO_USER=$1_user
	FREEZECOMBO_IP=$1_ip
	FREEZECOMBO_PORT=$1_port
	FREEZECOMBO_CIPHER=$1_cipher
	FREEZECOMBO_TYPE=$1_type
	FREEZECOMBO_KEY=$1_key

	if [[ -z ${!FREEZECOMBO_USER} ]]; then
		echo "Invalid parameter: -$1"; exit 0
	fi

	if [[ ${!FREEZECOMBO_TYPE} == 'ga' && ${2} != false ]]; then
		sudo ~/.composer/vendor/bin/phpga getCode secret ${!FREEZECOMBO_CIPHER} | pbcopy;echo -e "The Verification code has been copied to the clipboard, directly \033[49 CCOMMAND + V \033[0m paster."
	elif [[ ! -z ${!FREEZECOMBO_CIPHER} && ${2} != false ]]; then
		echo "${!FREEZECOMBO_CIPHER}" | pbcopy;echo -e "The cipher has been copied to the clipboard, directly \033[49 CCOMMAND + V \033[0m paster."
	fi
}

function _amSsh() {
	# getopts parameter analysis
    while getopts "f:" arg
    do
        case $arg in
            f) amFortress="${OPTARG}" ;;
            ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
    done

	if [[ ! -z $amFortress ]];then
		_getConfigVar $amFortress false
		FREEZECOMBO_FORTRESS_PORT=${FREEZECOMBO_PORT}
		FREEZECOMBO_FORTRESS_USER=${FREEZECOMBO_USER}
		FREEZECOMBO_FORTRESS_IP=${FREEZECOMBO_IP}
		FREEZECOMBO_FORTRESS_CIPHER=${FREEZECOMBO_CIPHER}
		FREEZECOMBO_FORTRESS_KEY=${FREEZECOMBO_KEY}

		_getConfigVar $3
		ssh -t -p ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP} "ssh -p ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}"
		exit 0
	fi

	_getConfigVar $1
	if [[ ${!FREEZECOMBO_TYPE} == 'key' ]]; then
		ssh -p ${!FREEZECOMBO_PORT} -i ${!FREEZECOMBO_KEY} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}
	else
		ssh -p ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}
	fi
}

function _amScp() {
	# getopts parameter analysis
    while getopts "f:" arg
    do
        case $arg in
            f) amFortress="${OPTARG}" ;;
            ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
    done

	if [[ ! -z $amFortress ]];then
		_getConfigVar $amFortress false
        FREEZECOMBO_FORTRESS_PORT=${FREEZECOMBO_PORT}
        FREEZECOMBO_FORTRESS_USER=${FREEZECOMBO_USER}
        FREEZECOMBO_FORTRESS_IP=${FREEZECOMBO_IP}
        FREEZECOMBO_FORTRESS_CIPHER=${FREEZECOMBO_CIPHER}

        amAddressIn3=${3#*:}
		amNameIn3=${3%:*}
		amAddressIn4=${4#*:}
		amNameIn4=${4%:*}
		if [[ ${amAddressIn3} != ${amNameIn3} ]]; then
			_getConfigVar ${amNameIn3}
			let i=${#amAddressIn3}-1
			if [[ ${amAddressIn3:$i:1} == '/' ]];then
				amAddressIn3=${amAddressIn3%/}
			fi
			ssh -p ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP} "scp -r -P ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn3} /tmp/"
			scp -r -P ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP}:/tmp/${amAddressIn3##*/} $4
		elif [[ ${amAddressIn4} != ${amNameIn4} ]]; then
			_getConfigVar ${amNameIn4}
			scp -r -P ${!FREEZECOMBO_FORTRESS_PORT} $3 ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP}:/tmp/
			ssh -p ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP} "scp -P ${!FREEZECOMBO_PORT} /tmp/${3##*/} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn4}"
        else
        	exit 1
        fi
        
        return 0
	fi

	amAddressIn1=${1#*:}
	amNameIn1=${1%:*}
	amAddressIn2=${2#*:}
	amNameIn2=${2%:*}

	if [[ ${amAddressIn1} != ${amNameIn1} ]]; then
		_getConfigVar ${amNameIn1}
		scp -r -P ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn1} $2
	elif [[ ${amAddressIn2} != ${amNameIn2} ]]; then
		_getConfigVar ${amNameIn2}
		if [[ ${!FREEZECOMBO_TYPE} == 'key' ]]; then
			scp -r -i ${!FREEZECOMBO_KEY} -P ${!FREEZECOMBO_PORT} $1 ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn2}
		else
			scp -r -P ${!FREEZECOMBO_PORT} $1 ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn2}
		fi
	else
		exit 1
	fi
}

function _amAnsible() {
	while getopts "l:" arg
    do
        case $arg in
            l) amLike="${OPTARG}" ;;
            ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
    done
    if [[ ! -z ${amLike} ]]; then
    	ansibleHosts=$(cat ${defaultConfigFile} | grep "# \[" | cut -d'[' -f 2 | cut -d']' -f 1 | grep ${amLike})
    else
		ansibleHosts=$(echo $*)
    fi
	for host in ${ansibleHosts}
	do
		_getConfigVar ${host} false
		echo ${host} ansible_ssh_user=${!FREEZECOMBO_USER} ansible_ssh_host=${!FREEZECOMBO_IP} ansible_ssh_port=${!FREEZECOMBO_PORT}
	done
	exit
}

case $1 in
	add)
		_amAdd $(echo $* | awk '$1="";1')
	;;
	modify)
		MODIFY_ALIAS=${2}
		_amModfiy $(echo $* | awk '$1=$2=$3"";1')
	;;
	delete)
		_amDelete $(echo $* | awk '$1="";1')
	;;
	version)
		_amShowVersion	
	;;
	find)
		_amFind $2
	;;
	completion)
		complete -W "$(cat ${defaultConfigFile} | grep "# \[" | cut -d'[' -f 2 | cut -d']' -f 1)" ssh-am
	;;
	-h|--help)
		_amHelp
	;;
	--scp)
		_amScp $(echo $* | awk '$1="";1')
	;;
	list)
		_amList | column -t
	;;
	ansible)
		_amAnsible $(echo $* | awk '$1="";1')
	;;
	*)
		${defaultDrive} $*
	;;
esac
