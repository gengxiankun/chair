#!/usr/bin/env bash
# set -x
defaultDrive='_amSsh'
defaultConfigPath=~/Documents/.amdata

function _amHelp() {
  cat <<-EOF
usage: ssh-am [ 账户别名 ]
Commands:
  add        新增一个账户
  modify     修改一个账户
  delete     删除一个账户
  list 	     查看账户列表
  find 	     查看账户详情
  ansible    将账户数据以ansible的格式输出
  completion 自动补充账户名
  --scp      默认操作为ssh，指定--scp则进行scp操作
  -h|--help  查看帮助
Options:
  -n  账户别名
  -i  IP
  -u  用户名
  -p  登陆密码/谷歌二次认证密钥
  -P  端口号
  -t  登陆授权的类型，默认为password，如果选择谷歌二次认证的方式授权，则指定为 'ga'
EOF
}

# initialization
if [[ ! -e ${defaultConfigPath} ]]; then
	echo "starting initialization..."
	touch ${defaultConfigPath}
	echo "#.am.data" > ${defaultConfigPath}
fi

function _amList() {
	varList=$(cat ${defaultConfigPath} | grep "# \[" | cut -d'[' -f 2 | cut -d']' -f 1)
	echo -e "NAME USER IP PORT TYPE"
	for var in $varList
	do
		_getConfigVar $var false
    	echo -e "${var} ${!FREEZECOMBO_USER} ${!FREEZECOMBO_IP} ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_TYPE}"
	done
}

function _amAdd() {
	# getopts parameter analysis
	while getopts "n:u:i:p:P:t:" arg
	do
        case $arg in
	        n) amName="${OPTARG}" ;;
	        u) amUser="${OPTARG}" ;;
	        i) amIp="${OPTARG}" ;;
			P) amPort="${OPTARG}" ;;
			p) amCipher="${OPTARG}" ;;
			t) amType="${OPTARG:-password}" ;;
	        ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
	done
	echo "# [${amName}]" >> ${defaultConfigPath}
	echo "${amName}_user='${amUser}'" >> ${defaultConfigPath}
	echo "${amName}_ip='${amIp}'" >> ${defaultConfigPath}
	echo "${amName}_port='${amPort:-22}'" >> ${defaultConfigPath}
	echo "${amName}_cipher='${amCipher}'" >> ${defaultConfigPath}
	echo "${amName}_type='${amType}'" >> ${defaultConfigPath}
}

function _amModfiy() {
	# getopts parameter analysis
	while getopts "n:u:i:p:P:t:" arg
	do
        case $arg in
	        n) amName="${OPTARG}" ;;
	        u) amUser="${OPTARG}" ;;
	        i) amIp="${OPTARG}" ;;
			P) amPort="${OPTARG}" ;;
			p) amCipher="${OPTARG}" ;;
			t) amType="${OPTARG}" ;;
	        ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
	done

	_getConfigVar ${MODIFY_ALIAS} false
	if [[ -z ${!FREEZECOMBO_USER} ]]; then
		echo "Not specified alias."
		exit 2
	fi

	if [[ ! -z ${amName} ]]; then
		sed -i "" "s/\[$MODIFY_ALIAS\]/[$amName]/g" ${defaultConfigPath}
		sed -i "" "s/${FREEZECOMBO_USER}/${amName}_user/g" ${defaultConfigPath}
		sed -i "" "s/${FREEZECOMBO_IP}/${amName}_ip/g" ${defaultConfigPath}
		sed -i "" "s/${FREEZECOMBO_PORT}/${amName}_port/g" ${defaultConfigPath}
		sed -i "" "s/${FREEZECOMBO_CIPHER}/${amName}_cipher/g" ${defaultConfigPath}
		sed -i "" "s/${FREEZECOMBO_TYPE}/${amName}_type/g" ${defaultConfigPath}
  	else
		amName=${MODIFY_ALIAS}
	fi

	if [[ ! -z ${amUser} ]]; then
		sed -i "" "s/^${amName}_user.*$/${amName}_user='${amUser}'/g" ${defaultConfigPath}
	fi

	if [[ ! -z ${amIp} ]]; then
		sed -i "" "s/^${amName}_ip.*$/${amName}_ip='${amIp}'/g" ${defaultConfigPath}
	fi

	if [[ ! -z ${amPort} ]]; then
		sed -i "" "s/^${amName}_port.*$/${amName}_port='${amPort}'/g" ${defaultConfigPath}
	fi

	if [[ ! -z ${amCipher} ]]; then
		sed -i "" "s/^${amName}_cipher.*$/${amName}_cipher='${amCipher}'/g" ${defaultConfigPath}
	fi

	if [[ ! -z ${amType} ]]; then
		sed -i "" "s/^${amName}_type.*$/${amName}_type='${amType}'/g" ${defaultConfigPath}
	fi
}

function _amFind() {
	_getConfigVar $1 false
	echo -e "\033[4m ${1} \033[0m \033[32;49;1m [User] \033[39;49;0m ${!FREEZECOMBO_USER} \033[32;49;1m [IP] \033[39;49;0m ${!FREEZECOMBO_IP} \033[32;49;1m [Port] \033[39;49;0m ${!FREEZECOMBO_PORT} \033[32;49;1m [Password/Cipher] \033[39;49;0m ${!FREEZECOMBO_CIPHER}"
}

function _amDelete() {
	if [[ -z ${1} ]]; then return 1; fi
	sed -i "" "/\[${1}\]/d" ${defaultConfigPath}
	sed -i "" "/${1}_user/d" ${defaultConfigPath}
	sed -i "" "/${1}_ip/d" ${defaultConfigPath}
	sed -i "" "/${1}_port/d" ${defaultConfigPath}
	sed -i "" "/${1}_cipher/d" ${defaultConfigPath}
	sed -i "" "/${1}_type/d" ${defaultConfigPath}
}

function _getConfigVar() {
	source ${defaultConfigPath}
	FREEZECOMBO_USER=$1_user
	FREEZECOMBO_IP=$1_ip
	FREEZECOMBO_PORT=$1_port
	FREEZECOMBO_CIPHER=$1_cipher
	FREEZECOMBO_TYPE=$1_type

	if [[ ${!FREEZECOMBO_TYPE} == 'ga' && ${2} != false ]]; then
		~/.composer/vendor/bin/phpga getCode secret ${!FREEZECOMBO_CIPHER} | pbcopy;echo -e "The Verification code has been copied to the clipboard, directly \033[49 CCOMMAND + V \033[0m paster."
	elif [[ ! -z ${!FREEZECOMBO_CIPHER} && ${2} != false ]]; then
		echo "${!FREEZECOMBO_CIPHER}" | pbcopy;echo -e "The cipher has been copied to the clipboard, directly \033[49 CCOMMAND + V \033[0m paster."
	elif [[ ${2} != false ]]; then
		echo "Invalid parameter: -$1"; exit 0
	fi
}

function _amSsh() {
	# getopts parameter analysis
    while getopts "f:" arg
    do
        case $arg in
            f) amFortress="${OPTARG}" ;;
            ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
    done

	if [[ ! -z $amFortress ]];then
		_getConfigVar $amFortress false
		FREEZECOMBO_FORTRESS_PORT=${FREEZECOMBO_PORT}
		FREEZECOMBO_FORTRESS_USER=${FREEZECOMBO_USER}
		FREEZECOMBO_FORTRESS_IP=${FREEZECOMBO_IP}
		FREEZECOMBO_FORTRESS_CIPHER=${FREEZECOMBO_CIPHER}
		
		_getConfigVar $3
		ssh -t -p ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP} "ssh -p ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}"
		exit 0
	fi

	_getConfigVar $1
	ssh -p ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}
}

function _amScp() {
	# getopts parameter analysis
    while getopts "f:" arg
    do
        case $arg in
            f) amFortress="${OPTARG}" ;;
            ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
    done

	if [[ ! -z $amFortress ]];then
		_getConfigVar $amFortress false
        FREEZECOMBO_FORTRESS_PORT=${FREEZECOMBO_PORT}
        FREEZECOMBO_FORTRESS_USER=${FREEZECOMBO_USER}
        FREEZECOMBO_FORTRESS_IP=${FREEZECOMBO_IP}
        FREEZECOMBO_FORTRESS_CIPHER=${FREEZECOMBO_CIPHER}

        amAddressIn3=${3#*:}
		amNameIn3=${3%:*}
		amAddressIn4=${4#*:}
		amNameIn4=${4%:*}
		if [[ ${amAddressIn3} != ${amNameIn3} ]]; then
			_getConfigVar ${amNameIn3}
			let i=${#amAddressIn3}-1
			if [[ ${amAddressIn3:$i:1} == '/' ]];then
				amAddressIn3=${amAddressIn3%/}
			fi
			ssh -p ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP} "scp -r -P ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn3} /tmp/"
			scp -r -P ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP}:/tmp/${amAddressIn3##*/} $4
		elif [[ ${amAddressIn4} != ${amNameIn4} ]]; then
			_getConfigVar ${amNameIn4}
			scp -r -P ${!FREEZECOMBO_FORTRESS_PORT} $3 ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP}:/tmp/
			ssh -p ${!FREEZECOMBO_FORTRESS_PORT} ${!FREEZECOMBO_FORTRESS_USER}@${!FREEZECOMBO_FORTRESS_IP} "scp -P ${!FREEZECOMBO_PORT} /tmp/${3##*/} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn4}"
        else
        	exit 1
        fi
        
        return 0
	fi

	amAddressIn1=${1#*:}
	amNameIn1=${1%:*}
	amAddressIn2=${2#*:}
	amNameIn2=${2%:*}

	if [[ ${amAddressIn1} != ${amNameIn1} ]]; then
		_getConfigVar ${amNameIn1}
		scp -r -P ${!FREEZECOMBO_PORT} ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn1} $2
	elif [[ ${amAddressIn2} != ${amNameIn2} ]]; then
		_getConfigVar ${amNameIn2}
		scp -r -P ${!FREEZECOMBO_PORT} $1 ${!FREEZECOMBO_USER}@${!FREEZECOMBO_IP}:${amAddressIn2}
	else
		exit 1
	fi
}

function _amAnsible() {
	while getopts "l:" arg
    do
        case $arg in
            l) amLike="${OPTARG}" ;;
            ?) echo "Invalid option: -$OPTARG"; exit 0 ;;
        esac
    done
    if [[ ! -z ${amLike} ]]; then
    	ansibleHosts=$(cat ${defaultConfigPath} | grep "# \[" | cut -d'[' -f 2 | cut -d']' -f 1 | grep ${amLike})
    else
		ansibleHosts=$(echo $*)
    fi
	for host in ${ansibleHosts}
	do
		_getConfigVar ${host} false
		echo ${host} ansible_ssh_user=${!FREEZECOMBO_USER} ansible_ssh_host=${!FREEZECOMBO_IP} ansible_ssh_port=${!FREEZECOMBO_PORT}
	done
	exit
}

case $1 in
	add)
		_amAdd $(echo $* | awk '$1="";1')
	;;
	modify)
		MODIFY_ALIAS=${2}
		_amModfiy $(echo $* | awk '$1=$2=$3"";1')
	;;
	delete)
		_amDelete $(echo $* | awk '$1="";1')
	;;
	version)
		_amShowVersion	
	;;
	find)
		_amFind $2
	;;
	completion)
		complete -W "$(cat ${defaultConfigPath} | grep "# \[" | cut -d'[' -f 2 | cut -d']' -f 1)" ssh-am
	;;
	-h|--help)
		_amHelp
	;;
	--scp)
		_amScp $(echo $* | awk '$1="";1')
	;;
	list)
		_amList | column -t
	;;
	ansible)
		_amAnsible $(echo $* | awk '$1="";1')
	;;
	*)
		${defaultDrive} $*
	;;
esac
